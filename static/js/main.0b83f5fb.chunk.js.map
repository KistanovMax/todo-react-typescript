{"version":3,"sources":["styles/colors.tsx","components/Footer/styled.tsx","components/Footer/Footer.tsx","components/Header/styled.tsx","assets/icons/logo.svg","components/Date/styled.tsx","components/Date/Date.tsx","components/Header/Header.tsx","components/NewTodoModal/styled.tsx","components/NewTodoModal/NewTodoModal.tsx","components/TodoItem/styled.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/styled.tsx","components/TodoList/TodoList.tsx","constants/index.tsx","themes/theme.tsx","index.tsx"],"names":["COLORS","StyledFooter","styled","Box","AddButton","Fab","Footer","handleOpen","display","alignItems","justifyContent","onClick","aria-label","StyledHeader","Title","Typography","Logo","img","StyledDate","CurrentDate","date","Date","currentDate","getMonth","toUpperCase","getDate","getFullYear","Header","src","logo","alt","variant","color","StyledModal","Modal","ModalContent","ModalTitle","p","StyledTextField","TextField","StyledKeyboardDateTimePicker","KeyboardDateTimePicker","StyledCheckbox","Checkbox","ButtonsBox","SubmitButton","Button","NewTodoModal","open","setOpen","useState","selectedDate","setSelectedDate","handleClose","onClose","aria-labelledby","id","label","autoOk","inputVariant","ampm","value","onChange","disablePast","format","width","FormControlLabel","control","labelPlacement","size","StyledItem","props","important","StyledDeleteIcon","DeleteIcon","ImportantIcon","LabelImportantRoundedIcon","ImportantText","DateTimeBox","DateTime","TodoItem","text","time","checked","setChecked","isImportant","setIsImportant","day","Number","substr","month","year","todoDate","console","log","IconButton","disabled","StyledList","TodoList","todos","flexDirection","map","todo","TODOS","MAIN_THEME","createMuiTheme","palette","primary","main","secondary","App","utils","DateFnsUtils","locale","ThemeProvider","theme","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b83f5fb.chunk.js","sourcesContent":["export const COLORS = {\n  colorWhite: \"#FFF\",\n  colorYellow: \"#EFC958\",\n  colorDark: \"#344E5C\",\n  colorDarkTransparent: \"rgba(52, 78, 92, 0.8)\",\n  colorPink: \"#EF3D59\",\n  colorGreen: \"#4AB19D\",\n  colorBrown: \"#E17A47\",\n\n  colorShadow: \"rgba(133, 146, 165, 0.3)\",\n};\n","import styled from \"styled-components\";\nimport { Box, Fab } from \"@material-ui/core\";\nimport { COLORS } from \"../../styles/colors\";\n\nexport const StyledFooter = styled(Box)`\n  position: fixed;\n  bottom: 0px;\n  max-width: 1024px;\n  width: 100%;\n  height: 80px;\n`;\n\nexport const AddButton = styled(Fab)`\n  background: ${COLORS.colorGreen} !important;\n  color: ${COLORS.colorDark}!important;\n  right: 10px;\n`;\n","import React, { ReactElement } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { AddButton, StyledFooter } from \"./styled\";\n\ninterface Footer {\n  handleOpen: () => void;\n}\n\nexport default function Footer({ handleOpen }: Footer): ReactElement {\n  return (\n    <StyledFooter display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\">\n      <AddButton onClick={handleOpen} aria-label=\"add\">\n        <AddIcon />\n      </AddButton>\n    </StyledFooter>\n  );\n}\n","import styled from \"styled-components\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { COLORS } from \"../../styles/colors\";\n\nexport const StyledHeader = styled(Box)`\n  position: fixed;\n  top: 0px;\n  max-width: 1024px;\n  width: 100%;\n  height: 64px;\n  background: ${COLORS.colorWhite};\n  box-shadow: 0px 2px 12px ${COLORS.colorShadow};\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  z-index: 1;\n  user-select: none;\n`;\n\nexport const Title = styled(Typography)`\n  margin-left: 10px !important;\n  font-weight: 500 !important;\n`;\n\nexport const Logo = styled.img`\n  margin-left: 10px;\n  width: 50px;\n  height: 50px;\n`;\n","export default __webpack_public_path__ + \"static/media/logo.decf7265.svg\";","import styled from \"styled-components\";\nimport { Box } from \"@material-ui/core\";\nimport { COLORS } from \"../../styles/colors\";\n\nexport const StyledDate = styled(Box)`\n  height: 64px;\n  border-radius: 5px;\n  color: ${COLORS.colorDark};\n  font-size: 16px;\n  font-weight: 500;\n  margin-right: 10px;\n`;\n","import React, { ReactElement } from \"react\";\nimport { StyledDate } from \"./styled\";\n\nexport default function CurrentDate(): ReactElement {\n  const monthArr = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const date = new Date();\n  const currentDate = `${monthArr[\n    date.getMonth()\n  ].toUpperCase()}, ${date.getDate()} ${date.getFullYear()}`;\n\n  return (\n    <StyledDate display=\"flex\" alignItems=\"center\">\n      {currentDate}\n    </StyledDate>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { StyledHeader, Title, Logo } from \"./styled\";\nimport logo from \"../../assets/icons/logo.svg\";\nimport CurrentDate from \"../Date/Date\";\n\nexport default function Header(): ReactElement {\n  return (\n    <StyledHeader\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n    >\n      <Box display=\"flex\" alignItems=\"center\">\n        <Logo src={logo} alt=\"Logo\" />\n        <Title variant=\"h5\" color=\"primary\">\n          ToDo App\n        </Title>\n      </Box>\n      <CurrentDate />\n    </StyledHeader>\n  );\n}\n","import styled from \"styled-components\";\nimport { Box, Button, Checkbox, Modal, TextField } from \"@material-ui/core\";\nimport { COLORS } from \"../../styles/colors\";\nimport { KeyboardDateTimePicker } from \"@material-ui/pickers\";\n\nexport const StyledModal = styled(Modal)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: ${COLORS.colorDarkTransparent};\n`;\n\nexport const ModalContent = styled(Box)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n  background: ${COLORS.colorWhite};\n  color: ${COLORS.colorDark};\n  width: 90%;\n  max-width: 900px;\n  min-height: 300px;\n  outline: none;\n  border-radius: 5px;\n  user-select: none;\n`;\n\nexport const ModalTitle = styled.p`\n  font-size: 18px;\n`;\n\nexport const StyledTextField = styled(TextField)`\n  width: 95%;\n  border-radius: 5px;\n  input {\n    color: ${COLORS.colorDark};\n  }\n`;\n\nexport const StyledKeyboardDateTimePicker = styled(KeyboardDateTimePicker)`\n  width: 95%;\n  border-radius: 5px;\n  button {\n    color: ${COLORS.colorGreen} !important;\n  }\n  input {\n    color: ${COLORS.colorDark} !important;\n  }\n`;\n\nexport const StyledCheckbox = styled(Checkbox)`\n  color: ${COLORS.colorGreen} !important;\n`;\n\nexport const ButtonsBox = styled(Box)`\n  display: flex;\n  justify-content: space-between;\n  width: 150px;\n`;\n\nexport const SubmitButton = styled(Button)`\n  background: ${COLORS.colorGreen} !important;\n  color: ${COLORS.colorWhite} !important;\n`;\n","import React, { ReactElement, useState } from \"react\";\nimport { Box, Button, FormControlLabel } from \"@material-ui/core\";\n\nimport {\n  StyledModal,\n  ModalContent,\n  ModalTitle,\n  StyledTextField,\n  StyledKeyboardDateTimePicker,\n  StyledCheckbox,\n  ButtonsBox,\n  SubmitButton,\n} from \"./styled\";\n\ninterface NewTodoModal {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport default function NewTodoModal({\n  open,\n  setOpen,\n}: NewTodoModal): ReactElement {\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSaveTodo = () => {\n    (\"\");\n  };\n\n  const handleDateChange = (date: Date | null) => {\n    setSelectedDate(date);\n  };\n\n  return (\n    <Box>\n      <StyledModal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n      >\n        <ModalContent>\n          <ModalTitle id=\"simple-modal-title\">NEW TODO</ModalTitle>\n          <StyledTextField\n            color=\"primary\"\n            variant=\"outlined\"\n            label=\"What you need to do ?\"\n          />\n          <StyledKeyboardDateTimePicker\n            autoOk\n            inputVariant=\"outlined\"\n            ampm={false}\n            label=\"Choose date and time\"\n            value={selectedDate}\n            onChange={handleDateChange}\n            disablePast\n            format=\"dd.MM.yyyy HH:mm\"\n          />\n          <Box display=\"flex\" justifyContent=\"space-between\" width=\"95%\">\n            <FormControlLabel\n              value=\"end\"\n              control={<StyledCheckbox />}\n              label=\"Important\"\n              labelPlacement=\"end\"\n            />\n            <ButtonsBox>\n              <Button\n                onClick={handleClose}\n                color=\"primary\"\n                variant=\"outlined\"\n                size=\"small\"\n              >\n                Cancel\n              </Button>\n              <SubmitButton\n                onClick={handleSaveTodo}\n                variant=\"contained\"\n                size=\"small\"\n              >\n                Save\n              </SubmitButton>\n            </ButtonsBox>\n          </Box>\n        </ModalContent>\n      </StyledModal>\n    </Box>\n  );\n}\n","import styled from \"styled-components\";\nimport { Box, Checkbox } from \"@material-ui/core\";\nimport { COLORS } from \"../../styles/colors\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport LabelImportantRoundedIcon from \"@material-ui/icons/LabelImportantRounded\";\n\nexport const StyledItem = styled(Box)`\n  margin-bottom: 25px;\n  background: ${(props: { important: string }) =>\n    props.important === \"yellow\" && COLORS.colorYellow} !important;\n  background: ${(props: { important: string }) =>\n    props.important === \"dark\" && COLORS.colorDark} !important;\n  color: ${(props: { important: string }) =>\n    props.important === \"yellow\" && COLORS.colorDark} !important;\n  color: ${(props: { important: string }) =>\n    props.important === \"dark\" && COLORS.colorWhite} !important;\n  width: 95%;\n  height: 60px;\n  border-radius: 5px;\n  border-top-left-radius: 0;\n  position: relative;\n  user-select: none;\n`;\n\nexport const StyledCheckbox = styled(Checkbox)`\n  color: ${COLORS.colorGreen} !important;\n`;\n\nexport const StyledDeleteIcon = styled(DeleteIcon)`\n  color: ${COLORS.colorPink} !important;\n`;\n\nexport const ImportantIcon = styled(LabelImportantRoundedIcon)`\n  color: ${(props: { important: string }) =>\n    props.important === \"yellow\" && COLORS.colorYellow} !important;\n  color: ${(props: { important: string }) =>\n    props.important === \"dark\" && COLORS.colorDark} !important;\n`;\n\nexport const ImportantText = styled.p`\n  position: absolute;\n  top: 8px;\n  left: 48px;\n  font-size: 8px;\n  text-transform: uppercase;\n  color: ${COLORS.colorPink};\n`;\n\nexport const DateTimeBox = styled(Box)`\n  background: ${(props: { important: string }) =>\n    props.important === \"yellow\" && COLORS.colorYellow} !important;\n  background: ${(props: { important: string }) =>\n    props.important === \"dark\" && COLORS.colorDark} !important;\n  color: ${(props: { important: string }) =>\n    props.important === \"yellow\" && COLORS.colorDark} !important;\n  color: ${(props: { important: string }) =>\n    props.important === \"dark\" && COLORS.colorWhite} !important;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 180px;\n  height: 20px;\n  position: absolute;\n  top: -20px;\n  font-size: 10px;\n  border-top-left-radius: 20px;\n  border-top-right-radius: 50px;\n`;\n\nexport const DateTime = styled(Box)`\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n  font-size: 12px;\n`;\n","import React, { ReactElement, useState } from \"react\";\n\nimport { Box, IconButton } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport {\n  StyledItem,\n  StyledCheckbox,\n  StyledDeleteIcon,\n  ImportantIcon,\n  ImportantText,\n  DateTimeBox,\n  DateTime,\n} from \"./styled\";\n\ninterface TodoItem {\n  id: number;\n  text: string;\n  date: string;\n  time: string;\n  important: boolean;\n}\n\nexport default function TodoItem({\n  id,\n  text,\n  date,\n  time,\n}: TodoItem): ReactElement {\n  const [checked, setChecked] = useState(false);\n  const [isImportant, setIsImportant] = useState(false);\n\n  const monthArr = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const handleChecked = () => {\n    setChecked(!checked);\n  };\n\n  const handleImportant = () => {\n    setIsImportant(!isImportant);\n  };\n\n  const day = Number(date.substr(0, 2)) * 1;\n  const month = monthArr[Number(date.substr(3, 2)) - 1];\n  const year = date.substr(6, 4);\n  const todoDate = `${day} ${month} ${year}`;\n\n  return (\n    <StyledItem\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      important={isImportant ? \"yellow\" : \"dark\"}\n      onClick={() => console.log(id, text)}\n    >\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton onClick={handleImportant}>\n          <ImportantIcon important={isImportant ? \"dark\" : \"yellow\"} />\n        </IconButton>\n        <p>{text}</p>\n      </Box>\n\n      <Box>\n        <StyledCheckbox checked={checked} onChange={handleChecked} />\n        <IconButton disabled={!checked} aria-label=\"delete\">\n          {checked ? <StyledDeleteIcon /> : <DeleteIcon />}\n        </IconButton>\n      </Box>\n      {isImportant && <ImportantText>Important</ImportantText>}\n      <DateTimeBox important={isImportant ? \"dark\" : \"yellow\"}>\n        <DateTime>\n          {todoDate}{\" \"}\n          <p>\n            <b>{time}</b>\n          </p>\n        </DateTime>\n      </DateTimeBox>\n    </StyledItem>\n  );\n}\n","import styled from \"styled-components\";\nimport { Box, TextField } from \"@material-ui/core\";\n\nexport const StyledList = styled(Box)`\n  margin-top: 90px;\n`;\n\nexport const StyledText = styled(TextField)``;\n","import React, { ReactElement } from \"react\";\n\nimport TodoItem from \"../TodoItem/TodoItem\";\nimport { StyledList } from \"./styled\";\n\ninterface TodoList {\n  todos: {\n    id: number;\n    text: string;\n    date: string;\n    time: string;\n    important: boolean;\n  }[];\n}\n\nexport default function TodoList({ todos }: TodoList): ReactElement {\n  return (\n    <StyledList display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          id={todo.id}\n          text={todo.text}\n          date={todo.date}\n          time={todo.time}\n          important={todo.important}\n        />\n      ))}\n    </StyledList>\n  );\n}\n","export const TODOS = [\n  { id: 1, text: \"React\", date: \"02.02.2021\", time: \"11:30\", important: false },\n  { id: 2, text: \"Redux\", date: \"10.05.2021\", time: \"9:00\", important: false },\n  {\n    id: 3,\n    text: \"Type Script\",\n    date: \"12.08.2021\",\n    time: \"10:15\",\n    important: true,\n  },\n  {\n    id: 4,\n    text: \"Node JS\",\n    date: \"22.09.2021\",\n    time: \"17:45\",\n    important: true,\n  },\n  {\n    id: 5,\n    text: \"React Native\",\n    date: \"30.12.2021\",\n    time: \"20:30\",\n    important: false,\n  },\n];\n","import { createMuiTheme } from \"@material-ui/core\";\nimport { COLORS } from \"../styles/colors\";\n\nexport const MAIN_THEME = createMuiTheme({\n  palette: {\n    primary: {\n      main: `${COLORS.colorDark}`,\n    },\n    secondary: {\n      main: `${COLORS.colorYellow}`,\n    },\n  },\n});\n","import React, { ReactElement, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport locale from \"date-fns/locale/en-GB\";\n\nimport Footer from \"./components/Footer/Footer\";\nimport Header from \"./components/Header/Header\";\nimport NewTodoModal from \"./components/NewTodoModal/NewTodoModal\";\nimport TodoList from \"./components/TodoList/TodoList\";\n\nimport { TODOS } from \"./constants/index\";\n\nimport { MAIN_THEME } from \"./themes/theme\";\nimport \"./styles/global.css\";\n\nexport default function App(): ReactElement {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={locale}>\n      <ThemeProvider theme={MAIN_THEME}>\n        <Header />\n        <TodoList todos={TODOS} />\n        <Footer handleOpen={handleOpen} />\n        <NewTodoModal open={open} setOpen={setOpen} />\n      </ThemeProvider>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}