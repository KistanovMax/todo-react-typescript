{"version":3,"sources":["styles/colors.tsx","components/Footer/styled.tsx","components/Footer/Footer.tsx","components/Header/styled.tsx","assets/icons/logo.svg","components/Date/styled.tsx","components/Date/Date.tsx","components/Header/Header.tsx","components/NewTodoModal/styled.tsx","components/NewTodoModal/NewTodoModal.tsx","components/TodoItem/styled.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/styled.tsx","components/TodoList/TodoList.tsx","api/data.tsx","themes/theme.tsx","index.tsx"],"names":["COLORS","StyledFooter","styled","Box","AddButton","Fab","Footer","handleOpen","display","alignItems","justifyContent","onClick","aria-label","StyledHeader","Title","Typography","Logo","img","StyledDate","CurrentDate","date","Date","currentDate","getMonth","toUpperCase","getDate","getFullYear","Header","src","logo","alt","variant","color","StyledModal","Modal","ModalContent","ModalTitle","p","StyledTextField","TextField","StyledKeyboardDateTimePicker","KeyboardDateTimePicker","StyledCheckbox","Checkbox","ButtonsBox","SubmitButton","Button","NewTodoModal","open","handleAdd","handleClose","handleText","useState","selectedDate","setSelectedDate","important","setImportant","time","toLocaleDateString","toLocaleTimeString","substr","onClose","aria-labelledby","id","onChange","label","autoOk","inputVariant","ampm","value","disablePast","format","width","FormControlLabel","control","labelPlacement","size","StyledItem","props","StyledDeleteIcon","DeleteIcon","ImportantIcon","LabelImportantRoundedIcon","ImportantText","DateTimeBox","DateTime","TodoItem","text","handleDelete","checked","setChecked","isImportant","setIsImportant","day","Number","month","year","todoDate","IconButton","disabled","StyledList","TodoList","todos","setOpen","data","setData","setText","newData","filter","el","flexDirection","map","todo","newTodo","length","e","target","TODOS","MAIN_THEME","createMuiTheme","palette","primary","main","secondary","App","utils","DateFnsUtils","locale","ThemeProvider","theme","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2deb062e.chunk.js","sourcesContent":["export const COLORS = {\n  colorWhite: \"#FFF\",\n  colorYellow: \"#EFC958\",\n  colorDark: \"#344E5C\",\n  colorDarkTransparent: \"rgba(52, 78, 92, 0.8)\",\n  colorPink: \"#EF3D59\",\n  colorGreen: \"#4AB19D\",\n  colorBrown: \"#E17A47\",\n\n  colorShadow: \"rgba(133, 146, 165, 0.3)\",\n};\n","import styled from \"styled-components\";\nimport { Box, Fab } from \"@material-ui/core\";\nimport { COLORS } from \"../../styles/colors\";\n\nexport const StyledFooter = styled(Box)`\n  position: fixed;\n  bottom: 0px;\n  max-width: 1024px;\n  width: 100%;\n  height: 80px;\n`;\n\nexport const AddButton = styled(Fab)`\n  background: ${COLORS.colorGreen} !important;\n  color: ${COLORS.colorDark}!important;\n  right: 10px;\n`;\n","import React, { ReactElement } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { AddButton, StyledFooter } from \"./styled\";\n\ninterface Footer {\n  handleOpen: () => void;\n}\n\nexport default function Footer({ handleOpen }: Footer): ReactElement {\n  return (\n    <StyledFooter display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\">\n      <AddButton onClick={handleOpen} aria-label=\"add\">\n        <AddIcon />\n      </AddButton>\n    </StyledFooter>\n  );\n}\n","import styled from \"styled-components\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { COLORS } from \"../../styles/colors\";\n\nexport const StyledHeader = styled(Box)`\n  position: fixed;\n  top: 0px;\n  max-width: 1024px;\n  width: 100%;\n  height: 64px;\n  background: ${COLORS.colorWhite};\n  box-shadow: 0px 2px 12px ${COLORS.colorShadow};\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  z-index: 1;\n  user-select: none;\n`;\n\nexport const Title = styled(Typography)`\n  margin-left: 10px !important;\n  font-weight: 500 !important;\n`;\n\nexport const Logo = styled.img`\n  margin-left: 10px;\n  width: 50px;\n  height: 50px;\n`;\n","export default __webpack_public_path__ + \"static/media/logo.decf7265.svg\";","import styled from \"styled-components\";\nimport { Box } from \"@material-ui/core\";\nimport { COLORS } from \"../../styles/colors\";\n\nexport const StyledDate = styled(Box)`\n  height: 64px;\n  border-radius: 5px;\n  color: ${COLORS.colorDark};\n  font-size: 16px;\n  font-weight: 500;\n  margin-right: 10px;\n`;\n","import React, { ReactElement } from \"react\";\nimport { StyledDate } from \"./styled\";\n\nexport default function CurrentDate(): ReactElement {\n  const monthArr = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const date = new Date();\n  const currentDate = `${monthArr[\n    date.getMonth()\n  ].toUpperCase()}, ${date.getDate()} ${date.getFullYear()}`;\n\n  return (\n    <StyledDate display=\"flex\" alignItems=\"center\">\n      {currentDate}\n    </StyledDate>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { StyledHeader, Title, Logo } from \"./styled\";\nimport logo from \"../../assets/icons/logo.svg\";\nimport CurrentDate from \"../Date/Date\";\n\nexport default function Header(): ReactElement {\n  return (\n    <StyledHeader\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n    >\n      <Box display=\"flex\" alignItems=\"center\">\n        <Logo src={logo} alt=\"Logo\" />\n        <Title variant=\"h5\" color=\"primary\">\n          ToDo App\n        </Title>\n      </Box>\n      <CurrentDate />\n    </StyledHeader>\n  );\n}\n","import styled from \"styled-components\";\nimport { Box, Button, Checkbox, Modal, TextField } from \"@material-ui/core\";\nimport { COLORS } from \"../../styles/colors\";\nimport { KeyboardDateTimePicker } from \"@material-ui/pickers\";\n\nexport const StyledModal = styled(Modal)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: ${COLORS.colorDarkTransparent};\n`;\n\nexport const ModalContent = styled(Box)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n  background: ${COLORS.colorWhite};\n  color: ${COLORS.colorDark};\n  width: 90%;\n  max-width: 900px;\n  min-height: 300px;\n  outline: none;\n  border-radius: 5px;\n  user-select: none;\n`;\n\nexport const ModalTitle = styled.p`\n  font-size: 18px;\n`;\n\nexport const StyledTextField = styled(TextField)`\n  width: 95%;\n  border-radius: 5px;\n  input {\n    color: ${COLORS.colorDark};\n  }\n`;\n\nexport const StyledKeyboardDateTimePicker = styled(KeyboardDateTimePicker)`\n  width: 95%;\n  border-radius: 5px;\n  button {\n    color: ${COLORS.colorGreen} !important;\n  }\n  input {\n    color: ${COLORS.colorDark} !important;\n  }\n`;\n\nexport const StyledCheckbox = styled(Checkbox)`\n  color: ${COLORS.colorGreen} !important;\n`;\n\nexport const ButtonsBox = styled(Box)`\n  display: flex;\n  justify-content: space-between;\n  width: 150px;\n`;\n\nexport const SubmitButton = styled(Button)`\n  background: ${COLORS.colorGreen} !important;\n  color: ${COLORS.colorWhite} !important;\n`;\n","import React, { ReactElement, useState } from \"react\";\nimport { Box, Button, FormControlLabel } from \"@material-ui/core\";\n\nimport {\n  StyledModal,\n  ModalContent,\n  ModalTitle,\n  StyledTextField,\n  StyledKeyboardDateTimePicker,\n  StyledCheckbox,\n  ButtonsBox,\n  SubmitButton,\n} from \"./styled\";\n\ninterface NewTodoModalProps {\n  open: boolean;\n  handleAdd: (date: string, time: string, important: boolean) => void;\n  handleClose: () => void;\n  handleText: (e: { target: { value: React.SetStateAction<string> } }) => void;\n}\n\nexport default function NewTodoModal({\n  open,\n  handleAdd,\n  handleClose,\n  handleText,\n}: NewTodoModalProps): ReactElement {\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\n  const [important, setImportant] = useState(false);\n\n  const handleDateChange = (date: Date | null) => {\n    setSelectedDate(date);\n  };\n\n  const handleImportant = () => {\n    setImportant(true);\n  };\n\n  let date = \"\";\n  let time = \"\";\n\n  if (selectedDate) {\n    date = selectedDate.toLocaleDateString();\n    time = selectedDate.toLocaleTimeString().substr(0, 5);\n  }\n\n  return (\n    <Box>\n      <StyledModal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n      >\n        <ModalContent>\n          <ModalTitle id=\"simple-modal-title\">NEW TODO</ModalTitle>\n          <StyledTextField\n            onChange={handleText}\n            color=\"primary\"\n            variant=\"outlined\"\n            label=\"What you need to do ?\"\n          />\n          <StyledKeyboardDateTimePicker\n            autoOk\n            inputVariant=\"outlined\"\n            ampm={false}\n            label=\"Choose date and time\"\n            value={selectedDate}\n            onChange={handleDateChange}\n            disablePast\n            format=\"dd.MM.yyyy HH:mm\"\n          />\n          <Box display=\"flex\" justifyContent=\"space-between\" width=\"95%\">\n            <FormControlLabel\n              value=\"end\"\n              control={<StyledCheckbox onChange={handleImportant} />}\n              label=\"Important\"\n              labelPlacement=\"end\"\n            />\n            <ButtonsBox>\n              <Button\n                onClick={handleClose}\n                color=\"primary\"\n                variant=\"outlined\"\n                size=\"small\"\n              >\n                Cancel\n              </Button>\n              <SubmitButton\n                onClick={() => handleAdd(date, time, important)}\n                variant=\"contained\"\n                size=\"small\"\n              >\n                Save\n              </SubmitButton>\n            </ButtonsBox>\n          </Box>\n        </ModalContent>\n      </StyledModal>\n    </Box>\n  );\n}\n","import styled from \"styled-components\";\nimport { Box, Checkbox } from \"@material-ui/core\";\nimport { COLORS } from \"../../styles/colors\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport LabelImportantRoundedIcon from \"@material-ui/icons/LabelImportantRounded\";\n\nexport const StyledItem = styled(Box)`\n  margin-bottom: 25px;\n  background: ${(props: { important: string }) =>\n    props.important === \"yellow\" && COLORS.colorYellow} !important;\n  background: ${(props: { important: string }) =>\n    props.important === \"dark\" && COLORS.colorDark} !important;\n  color: ${(props: { important: string }) =>\n    props.important === \"yellow\" && COLORS.colorDark} !important;\n  color: ${(props: { important: string }) =>\n    props.important === \"dark\" && COLORS.colorWhite} !important;\n  width: 95%;\n  height: 60px;\n  border-radius: 5px;\n  border-top-left-radius: 0;\n  position: relative;\n  user-select: none;\n`;\n\nexport const StyledCheckbox = styled(Checkbox)`\n  color: ${COLORS.colorGreen} !important;\n`;\n\nexport const StyledDeleteIcon = styled(DeleteIcon)`\n  color: ${COLORS.colorPink} !important;\n`;\n\nexport const ImportantIcon = styled(LabelImportantRoundedIcon)`\n  color: ${(props: { important: string }) =>\n    props.important === \"yellow\" && COLORS.colorYellow} !important;\n  color: ${(props: { important: string }) =>\n    props.important === \"dark\" && COLORS.colorDark} !important;\n`;\n\nexport const ImportantText = styled.p`\n  position: absolute;\n  top: 8px;\n  left: 48px;\n  font-size: 8px;\n  text-transform: uppercase;\n  color: ${COLORS.colorPink};\n`;\n\nexport const DateTimeBox = styled(Box)`\n  background: ${(props: { important: string }) =>\n    props.important === \"yellow\" && COLORS.colorYellow} !important;\n  background: ${(props: { important: string }) =>\n    props.important === \"dark\" && COLORS.colorDark} !important;\n  color: ${(props: { important: string }) =>\n    props.important === \"yellow\" && COLORS.colorDark} !important;\n  color: ${(props: { important: string }) =>\n    props.important === \"dark\" && COLORS.colorWhite} !important;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 180px;\n  height: 20px;\n  position: absolute;\n  top: -20px;\n  font-size: 10px;\n  border-top-left-radius: 20px;\n  border-top-right-radius: 50px;\n`;\n\nexport const DateTime = styled(Box)`\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n  font-size: 12px;\n`;\n","import React, { ReactElement, useState } from \"react\";\n\nimport { Box, IconButton } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport {\n  StyledItem,\n  StyledCheckbox,\n  StyledDeleteIcon,\n  ImportantIcon,\n  ImportantText,\n  DateTimeBox,\n  DateTime,\n} from \"./styled\";\n\ninterface TodoItemProps {\n  id: number;\n  text: string;\n  date: string;\n  time: string;\n  important: boolean;\n  handleDelete: (id: number) => void;\n}\n\nexport default function TodoItem({\n  id,\n  text,\n  date,\n  time,\n  important,\n  handleDelete,\n}: TodoItemProps): ReactElement {\n  const [checked, setChecked] = useState(false);\n  const [isImportant, setIsImportant] = useState(important);\n\n  const monthArr = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const handleChecked = () => {\n    setChecked(!checked);\n  };\n\n  const handleImportant = () => {\n    setIsImportant(!isImportant);\n  };\n\n  const day = Number(date.substr(0, 2)) * 1;\n  const month = monthArr[Number(date.substr(3, 2)) - 1];\n  const year = date.substr(6, 4);\n  const todoDate = `${day} ${month} ${year}`;\n\n  return (\n    <StyledItem\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      important={isImportant ? \"yellow\" : \"dark\"}\n    >\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton onClick={handleImportant}>\n          <ImportantIcon important={isImportant ? \"dark\" : \"yellow\"} />\n        </IconButton>\n        <p>{text}</p>\n      </Box>\n\n      <Box>\n        <StyledCheckbox checked={checked} onChange={handleChecked} />\n        <IconButton\n          onClick={() => handleDelete(id)}\n          disabled={!checked}\n          aria-label=\"delete\"\n        >\n          {checked ? <StyledDeleteIcon /> : <DeleteIcon />}\n        </IconButton>\n      </Box>\n      {isImportant && <ImportantText>Important</ImportantText>}\n      <DateTimeBox important={isImportant ? \"dark\" : \"yellow\"}>\n        <DateTime>\n          {todoDate}\n          <p>\n            <b>{time}</b>\n          </p>\n        </DateTime>\n      </DateTimeBox>\n    </StyledItem>\n  );\n}\n","import styled from \"styled-components\";\nimport { Box, TextField } from \"@material-ui/core\";\n\nexport const StyledList = styled(Box)`\n  margin-top: 90px;\n`;\n\nexport const StyledText = styled(TextField)``;\n","import React, { ReactElement, useState } from \"react\";\nimport { Todo } from \"../../types\";\nimport NewTodoModal from \"../NewTodoModal/NewTodoModal\";\n\nimport TodoItem from \"../TodoItem/TodoItem\";\nimport { StyledList } from \"./styled\";\n\ninterface TodoListProps {\n  todos: Todo[];\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport default function TodoList({\n  todos,\n  open,\n  setOpen,\n}: TodoListProps): ReactElement {\n  const [data, setData] = useState(todos);\n  const [text, setText] = useState(\"\");\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleText = (e: {\n    target: { value: React.SetStateAction<string> };\n  }) => {\n    setText(e.target.value);\n  };\n\n  const handleAdd = (date: string, time: string, important: boolean) => {\n    if (text) {\n      const newTodo = {\n        id: data.length + 1,\n        text,\n        date,\n        time,\n        important,\n      };\n      setData([...data, newTodo]);\n      setText(\"\");\n      handleClose();\n    }\n  };\n\n  const handleDelete = (id: number) => {\n    const newData = data.filter((el) => el.id != id);\n    setData([...newData]);\n  };\n\n  return (\n    <>\n      <StyledList display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n        {data.map((todo) => (\n          <TodoItem\n            key={todo.id}\n            id={todo.id}\n            text={todo.text}\n            date={todo.date}\n            time={todo.time}\n            important={todo.important}\n            handleDelete={handleDelete}\n          />\n        ))}\n      </StyledList>\n      <NewTodoModal\n        open={open}\n        handleAdd={handleAdd}\n        handleClose={handleClose}\n        handleText={handleText}\n      />\n    </>\n  );\n}\n","export const TODOS = [\n  { id: 1, text: \"React\", date: \"02.02.2021\", time: \"11:30\", important: false },\n  { id: 2, text: \"Redux\", date: \"10.05.2021\", time: \"9:00\", important: false },\n  {\n    id: 3,\n    text: \"Type Script\",\n    date: \"12.08.2021\",\n    time: \"10:15\",\n    important: true,\n  },\n  {\n    id: 4,\n    text: \"Node JS\",\n    date: \"22.09.2021\",\n    time: \"17:45\",\n    important: true,\n  },\n  {\n    id: 5,\n    text: \"React Native\",\n    date: \"30.12.2021\",\n    time: \"20:30\",\n    important: false,\n  },\n];\n","import { createMuiTheme } from \"@material-ui/core\";\nimport { COLORS } from \"../styles/colors\";\n\nexport const MAIN_THEME = createMuiTheme({\n  palette: {\n    primary: {\n      main: `${COLORS.colorDark}`,\n    },\n    secondary: {\n      main: `${COLORS.colorYellow}`,\n    },\n  },\n});\n","import React, { ReactElement, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport locale from \"date-fns/locale/en-GB\";\n\nimport Footer from \"./components/Footer/Footer\";\nimport Header from \"./components/Header/Header\";\nimport TodoList from \"./components/TodoList/TodoList\";\n\nimport { TODOS } from \"./api/data\";\n\nimport { MAIN_THEME } from \"./themes/theme\";\nimport \"./styles/global.css\";\n\nexport default function App(): ReactElement {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={locale}>\n      <ThemeProvider theme={MAIN_THEME}>\n        <Header />\n        <TodoList todos={TODOS} open={open} setOpen={setOpen} />\n        <Footer handleOpen={handleOpen} />\n      </ThemeProvider>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}