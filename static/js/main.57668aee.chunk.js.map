{"version":3,"sources":["styles/colors.tsx","components/Footer/styled.tsx","components/Footer/Footer.tsx","components/Header/styled.tsx","assets/icons/logo.svg","components/Date/styled.tsx","components/Date/Date.tsx","components/Header/Header.tsx","components/NewTodoModal/styled.tsx","components/NewTodoModal/NewTodoModal.tsx","components/TodoItem/styled.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/styled.tsx","components/TodoList/TodoList.tsx","constants/index.tsx","themes/theme.tsx","index.tsx"],"names":["COLORS","StyledFooter","styled","Box","AddButton","Fab","Footer","display","alignItems","justifyContent","aria-label","StyledHeader","Title","Typography","Logo","img","StyledDate","CurrentDate","date","Date","currentDate","getMonth","toUpperCase","getDate","getFullYear","Header","src","logo","alt","variant","color","StyledModal","Modal","ModalContent","ModalTitle","p","StyledTextField","TextField","StyledKeyboardDateTimePicker","KeyboardDateTimePicker","StyledCheckbox","Checkbox","ButtonsBox","SubmitButton","Button","NewTodoModal","useState","open","setOpen","React","selectedDate","setSelectedDate","handleClose","onClose","aria-labelledby","aria-describedby","id","label","autoOk","inputVariant","ampm","value","onChange","disablePast","format","width","FormControlLabel","control","labelPlacement","onClick","size","StyledItem","props","important","StyledDeleteIcon","DeleteIcon","ImportantIcon","LabelImportantRoundedIcon","ImportantText","TodoItem","text","checked","setChecked","isImportant","setIsImportant","console","log","IconButton","disabled","StyledList","TodoList","todos","flexDirection","map","todo","TODOS","MAIN_THEME","createMuiTheme","palette","primary","main","secondary","App","utils","DateFnsUtils","locale","ThemeProvider","theme","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57668aee.chunk.js","sourcesContent":["export const COLORS = {\n  colorWhite: \"#FFF\",\n  colorYellow: \"#EFC958\",\n  colorDark: \"#344E5C\",\n  colorDarkTransparent: \"rgba(52, 78, 92, 0.8)\",\n  colorPink: \"#EF3D59\",\n  colorGreen: \"#4AB19D\",\n  colorBrown: \"#E17A47\",\n\n  colorShadow: \"rgba(133, 146, 165, 0.3)\",\n};\n","import styled from \"styled-components\";\nimport { Box, Fab } from \"@material-ui/core\";\nimport { COLORS } from \"../../styles/colors\";\n\nexport const StyledFooter = styled(Box)`\n  position: fixed;\n  bottom: 0px;\n  max-width: 1024px;\n  width: 100%;\n  height: 80px;\n`;\n\nexport const AddButton = styled(Fab)`\n  background: ${COLORS.colorGreen} !important;\n  color: ${COLORS.colorDark}!important;\n  right: 10px;\n`;\n","import React, { ReactElement } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { AddButton, StyledFooter } from \"./styled\";\n\nexport default function Footer(): ReactElement {\n  return (\n    <StyledFooter display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\">\n      <AddButton aria-label=\"add\">\n        <AddIcon />\n      </AddButton>\n    </StyledFooter>\n  );\n}\n","import styled from \"styled-components\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { COLORS } from \"../../styles/colors\";\n\nexport const StyledHeader = styled(Box)`\n  position: fixed;\n  top: 0px;\n  max-width: 1024px;\n  width: 100%;\n  height: 64px;\n  background: ${COLORS.colorWhite};\n  box-shadow: 0px 2px 12px ${COLORS.colorShadow};\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  z-index: 1;\n  user-select: none;\n`;\n\nexport const Title = styled(Typography)`\n  margin-left: 20px !important;\n  font-weight: 500 !important;\n`;\n\nexport const Logo = styled.img`\n  margin-left: 20px;\n  width: 50px;\n  height: 50px;\n`;\n","export default __webpack_public_path__ + \"static/media/logo.decf7265.svg\";","import styled from \"styled-components\";\nimport { Box } from \"@material-ui/core\";\nimport { COLORS } from \"../../styles/colors\";\n\nexport const StyledDate = styled(Box)`\n  height: 64px;\n  border-radius: 5px;\n  color: ${COLORS.colorDark};\n  font-size: 16px;\n  font-weight: 500;\n  margin-right: 20px;\n`;\n","import React, { ReactElement } from \"react\";\nimport { StyledDate } from \"./styled\";\n\nexport default function CurrentDate(): ReactElement {\n  const monthArr = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const date = new Date();\n  const currentDate = `${monthArr[\n    date.getMonth()\n  ].toUpperCase()}, ${date.getDate()} ${date.getFullYear()}`;\n\n  return (\n    <StyledDate display=\"flex\" alignItems=\"center\">\n      {currentDate}\n    </StyledDate>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { StyledHeader, Title, Logo } from \"./styled\";\nimport logo from \"../../assets/icons/logo.svg\";\nimport CurrentDate from \"../Date/Date\";\n\nexport default function Header(): ReactElement {\n  return (\n    <StyledHeader\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n    >\n      <Box display=\"flex\" alignItems=\"center\">\n        <Logo src={logo} alt=\"Logo\" />\n        <Title variant=\"h5\" color=\"primary\">\n          ToDo App\n        </Title>\n      </Box>\n      <CurrentDate />\n    </StyledHeader>\n  );\n}\n","import styled from \"styled-components\";\nimport { Box, Button, Checkbox, Modal, TextField } from \"@material-ui/core\";\nimport { COLORS } from \"../../styles/colors\";\nimport { KeyboardDateTimePicker } from \"@material-ui/pickers\";\n\nexport const StyledModal = styled(Modal)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: ${COLORS.colorDarkTransparent};\n`;\n\nexport const ModalContent = styled(Box)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n  background: ${COLORS.colorWhite};\n  color: ${COLORS.colorDark};\n  width: 90%;\n  max-width: 900px;\n  min-height: 300px;\n  outline: none;\n  border-radius: 5px;\n  user-select: none;\n`;\n\nexport const ModalTitle = styled.p`\n  font-size: 18px;\n`;\n\nexport const StyledTextField = styled(TextField)`\n  width: 95%;\n  border-radius: 5px;\n  input {\n    color: ${COLORS.colorDark};\n  }\n`;\n\nexport const StyledKeyboardDateTimePicker = styled(KeyboardDateTimePicker)`\n  width: 95%;\n  border-radius: 5px;\n  button {\n    color: ${COLORS.colorGreen} !important;\n  }\n  input {\n    color: ${COLORS.colorDark} !important;\n  }\n`;\n\nexport const StyledCheckbox = styled(Checkbox)`\n  color: ${COLORS.colorGreen} !important;\n`;\n\nexport const ButtonsBox = styled(Box)`\n  display: flex;\n  justify-content: space-between;\n  width: 150px;\n`;\n\nexport const SubmitButton = styled(Button)`\n  background: ${COLORS.colorGreen} !important;\n  color: ${COLORS.colorWhite} !important;\n`;\n","import React, { ReactElement, useState } from \"react\";\nimport { Box, Button, FormControlLabel } from \"@material-ui/core\";\n\nimport {\n  StyledModal,\n  ModalContent,\n  ModalTitle,\n  StyledTextField,\n  StyledKeyboardDateTimePicker,\n  StyledCheckbox,\n  ButtonsBox,\n  SubmitButton,\n} from \"./styled\";\n\nexport default function NewTodoModal(): ReactElement {\n  const [open, setOpen] = useState(true);\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\n    new Date()\n  );\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = () => {\n    (\"\");\n  };\n\n  const handleDateChange = (date: Date | null) => {\n    setSelectedDate(date);\n  };\n\n  return (\n    <Box>\n      <StyledModal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <ModalContent>\n          <ModalTitle id=\"simple-modal-title\">NEW TODO</ModalTitle>\n          <StyledTextField\n            color=\"primary\"\n            variant=\"outlined\"\n            label=\"What you need to do ?\"\n          />\n          <StyledKeyboardDateTimePicker\n            autoOk\n            inputVariant=\"outlined\"\n            ampm={false}\n            label=\"Choose date and time\"\n            value={selectedDate}\n            onChange={handleDateChange}\n            disablePast\n            format=\"dd.MM.yyyy HH:mm\"\n          />\n          <Box display=\"flex\" justifyContent=\"space-between\" width=\"95%\">\n            <FormControlLabel\n              value=\"end\"\n              control={<StyledCheckbox />}\n              label=\"Important\"\n              labelPlacement=\"end\"\n            />\n            <ButtonsBox>\n              <Button\n                onClick={handleClose}\n                color=\"primary\"\n                variant=\"outlined\"\n                size=\"small\"\n              >\n                Cancel\n              </Button>\n              <SubmitButton\n                onClick={handleSubmit}\n                variant=\"contained\"\n                size=\"small\"\n              >\n                Submit\n              </SubmitButton>\n            </ButtonsBox>\n          </Box>\n        </ModalContent>\n      </StyledModal>\n    </Box>\n  );\n}\n","import styled from \"styled-components\";\nimport { Box, Checkbox } from \"@material-ui/core\";\nimport { COLORS } from \"../../styles/colors\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport LabelImportantRoundedIcon from \"@material-ui/icons/LabelImportantRounded\";\n\nexport const StyledItem = styled(Box)`\n  margin-bottom: 10px;\n  background: ${(props: { important: string }) =>\n    props.important === \"yellow\" && COLORS.colorYellow} !important;\n  background: ${(props: { important: string }) =>\n    props.important === \"dark\" && COLORS.colorDark} !important;\n  color: ${(props: { important: string }) =>\n    props.important === \"yellow\" && COLORS.colorDark} !important;\n  color: ${(props: { important: string }) =>\n    props.important === \"dark\" && COLORS.colorWhite} !important;\n  width: 95%;\n  height: 60px;\n  border-radius: 5px;\n  position: relative;\n  user-select: none;\n`;\n\nexport const StyledCheckbox = styled(Checkbox)`\n  color: ${COLORS.colorGreen} !important;\n`;\n\nexport const StyledDeleteIcon = styled(DeleteIcon)`\n  color: ${COLORS.colorPink} !important;\n`;\n\nexport const ImportantIcon = styled(LabelImportantRoundedIcon)`\n  color: ${COLORS.colorYellow} !important;\n  color: ${(props: { important: string }) =>\n    props.important === \"yellow\" && COLORS.colorYellow} !important;\n  color: ${(props: { important: string }) =>\n    props.important === \"dark\" && COLORS.colorDark} !important;\n`;\n\nexport const ImportantText = styled.p`\n  position: absolute;\n  top: 8px;\n  left: 48px;\n  font-size: 8px;\n  text-transform: uppercase;\n  color: ${COLORS.colorPink};\n`;\n","import React, { ReactElement, useState } from \"react\";\n\nimport { Box, IconButton } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport {\n  StyledItem,\n  StyledCheckbox,\n  StyledDeleteIcon,\n  ImportantIcon,\n  ImportantText,\n} from \"./styled\";\n\ninterface TodoItem {\n  id: number;\n  text: string;\n  important: boolean;\n}\n\nexport default function TodoItem({ id, text }: TodoItem): ReactElement {\n  const [checked, setChecked] = useState(false);\n  const [isImportant, setIsImportant] = useState(false);\n\n  const handleChecked = () => {\n    setChecked(!checked);\n  };\n\n  const handleImportant = () => {\n    setIsImportant(!isImportant);\n  };\n\n  return (\n    <StyledItem\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      important={isImportant ? \"yellow\" : \"dark\"}\n      onClick={() => console.log(id, text)}\n    >\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton onClick={handleImportant}>\n          <ImportantIcon important={isImportant ? \"dark\" : \"yellow\"} />\n        </IconButton>\n        <p>{text}</p>\n      </Box>\n\n      <Box>\n        <StyledCheckbox checked={checked} onChange={handleChecked} />\n        <IconButton disabled={!checked} aria-label=\"delete\">\n          {checked ? <StyledDeleteIcon /> : <DeleteIcon />}\n        </IconButton>\n      </Box>\n      {isImportant && <ImportantText>Important</ImportantText>}\n    </StyledItem>\n  );\n}\n","import styled from \"styled-components\";\nimport { Box, TextField } from \"@material-ui/core\";\n\nexport const StyledList = styled(Box)`\n  margin-top: 80px;\n`;\n\nexport const StyledText = styled(TextField)``;\n","import React, { ReactElement } from \"react\";\n\nimport TodoItem from \"../TodoItem/TodoItem\";\nimport { StyledList } from \"./styled\";\n\ninterface TodoList {\n  todos: any[]; // eslint-disable-line\n}\n\nexport default function TodoList({ todos }: TodoList): ReactElement {\n  return (\n    <StyledList display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          id={todo.id}\n          text={todo.text}\n          important={todo.important}\n        />\n      ))}\n    </StyledList>\n  );\n}\n","export const TODOS = [\n  { id: 1, text: \"React\" },\n  { id: 2, text: \"Redux\" },\n  { id: 3, text: \"Type Script\", important: true },\n  { id: 4, text: \"Node JS\", important: true },\n  { id: 5, text: \"React Native\" },\n];\n","import { createMuiTheme } from \"@material-ui/core\";\nimport { COLORS } from \"../styles/colors\";\n\nexport const MAIN_THEME = createMuiTheme({\n  palette: {\n    primary: {\n      main: `${COLORS.colorDark}`,\n    },\n    secondary: {\n      main: `${COLORS.colorYellow}`,\n    },\n  },\n});\n\nconsole.log(MAIN_THEME);\n","import React, { ReactElement } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport locale from \"date-fns/locale/en-GB\";\n\nimport Footer from \"./components/Footer/Footer\";\nimport Header from \"./components/Header/Header\";\nimport NewTodoModal from \"./components/NewTodoModal/NewTodoModal\";\nimport TodoList from \"./components/TodoList/TodoList\";\n\nimport { TODOS } from \"./constants/index\";\n\nimport { MAIN_THEME } from \"./themes/theme\";\nimport \"./styles/global.css\";\n\nexport default function App(): ReactElement {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={locale}>\n      <ThemeProvider theme={MAIN_THEME}>\n        <Header />\n        <TodoList todos={TODOS} />\n        <NewTodoModal />\n        <Footer />\n      </ThemeProvider>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}